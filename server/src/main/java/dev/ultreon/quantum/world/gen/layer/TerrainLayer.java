package dev.ultreon.quantum.world.gen.layer;

import com.badlogic.gdx.utils.Disposable;
import dev.ultreon.quantum.world.Chunk;
import dev.ultreon.quantum.world.ServerWorld;
import dev.ultreon.quantum.world.World;
import dev.ultreon.quantum.world.rng.RNG;
import org.jetbrains.annotations.ApiStatus;

/**
 * A terrain layer that handles world generation.
 *
 * @author <a href="https://github.com/XyperCode">XyperCode</a>
 * @since 0.1.0
 */
public abstract class TerrainLayer implements Disposable {
    /**
     * Set blocks for the building of a chunk.
     * It handles world generation of a single terrain layer.
     *
     * @param world  the world to build the terrain in.
     * @param chunk  the chunk that is being built.
     * @param rng
     * @param x      the current X coordinate of the column being built.
     * @param y      the current Y coordinate to build in.
     * @param z      the current Z coordinate of the column being built.
     * @param height the terrain height generated by the noise generator.
     * @return true to finish the column building, false to continue.
     */
    @ApiStatus.OverrideOnly
    public abstract boolean handle(World world, Chunk chunk, RNG rng, int x, int y, int z, int height);

    public void create(ServerWorld world) {

    }

    @Override
    public void dispose() {

    }
}
