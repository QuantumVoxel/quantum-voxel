# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-linux:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: ubuntu:20.04
    description: "Build Project"

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make gradlew executable"
          command: "chmod +x gradlew"
      - run:
          name: "Get SDKMan"
          command: 'apt-get update && apt-get install -y curl unzip zip coreutils && curl -sL https://get.sdkman.io | bash'
      - run:
          name: "Install SDKMan and GraalVM 21"
          command: 'source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk list java && sdk install java 21.0.4-graal'
      - run:
          name: "Build Project"
          command: |
            export JAVA_HOME=$HOME/.sdkman/candidates/java/current
            ./gradlew jpackage
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Binaries"
          path: build/dist
  build-windows:
    machine:
      image: windows-server-2022-gui:current
      resource_class: windows.medium
    description: "Build Project (Windows)"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:0muEzYkWa1cMz1RF6VEIAgZWddVo5XffBgGdcKBGAxA"
      - checkout
      - run:
          name: "Set PowerShell Execution Policy"
          command: "powershell.exe -ExecutionPolicy Bypass"

      - run:
          name: Install GraalVM
          command: |
            curl.exe -L -o graalvm.zip https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-21.0.2/graalvm-community-jdk-21.0.2_windows-x64_bin.zip
            Expand-Archive -Force -Path graalvm.zip -DestinationPath C:\graalvm
            dir.exe C:\graalvm\graalvm-community-openjdk-21.0.2+13.1\bin
          shell: powershell
      - run:
          name: Install WiX Toolset
          command: |
            curl.exe -L -o wix314-binaries.zip https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip
            Expand-Archive -Force -Path wix314-binaries.zip -DestinationPath C:\wix
            dir.exe C:\wix
          shell: powershell
      - run:
          name: Verify Installation
          command: |
            $env:PATH += ";C:\graalvm\graalvm-community-openjdk-21.0.2+13.1\bin"
            $env:PATH += ";C:\wix"
            java.exe -version
            candle.exe -v  # Verifying WiX installation
            light.exe -v   # Verifying WiX installation
          shell: powershell
      - run:
          name: "Build Project"
          command: |
            $env:PATH += ";C:\graalvm\graalvm-community-openjdk-21.0.2+13.1\bin"
            $env:PATH += ";C:\wix"
            $env:JAVA_HOME = "C:\graalvm\graalvm-community-openjdk-21.0.2+13.1"
            ./gradlew.bat jpackage
          shell: powershell
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Binaries"
          path: build/dist
  build-macos:
    macos:
      xcode: 14.2.0
    resource_class: macos.m1.medium.gen1
    description: "Build Project (macOS)"
    steps:
      - checkout
      - run:
          name: "Install Brew"
          command: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - run:
          name: "Install GraalVM JDK @ 21"
          command: brew install --cask graalvm-jdk@21
      - run:
          name: "Build Project"
          command: |
            ./gradlew jpackage
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Binaries"
          path: build/dist
  test:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: ubuntu:20.04
    description: "Build and Test Project"

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make gradlew executable"
          command: "chmod +x gradlew"
      - run:
          name: "Get SDKMan"
          command: 'apt-get update && apt-get install -y curl unzip zip coreutils && curl -sL https://get.sdkman.io | bash'
      - run:
          name: "Install SDKMan and GraalVM 21"
          command: 'source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk list java && sdk install java 21.0.4-graal'
      - run:
          name: "Build Project"
          command: |
            export JAVA_HOME=$HOME/.sdkman/candidates/java/current
            ./gradlew build check
          environment:
            CIRCLE_CI: "true"
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build-linux:
          filters:
            branches:
              only:
                - edge
                - dev
                - main
      - build-windows:
          filters:
            branches:
              only:
                - edge
                - dev
                - main
      - build-macos:
          filters:
            branches:
              only:
                - edge
                - dev
                - main
      - test
